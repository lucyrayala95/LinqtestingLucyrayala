Postman Notes: GET Contacts API Testing in Linq
Endpoint
URL: https://linqapp.com/admin/22407/contacts
Method: GET

Headers
Content-Type: application/json

Authorization: Bearer <your_access_token>

Post-Response Tests in Postman
The following test script is being executed after the response:

javascript

pm.expect(responseData).to.have.property('name');
pm.expect(responseData).to.have.property('email');
pm.expect(responseData).to.have.property('phone');
pm.expect(responseData).to.have.property('address');

pm.test("Response schema validation for data types and formats", function () {
    const responseData = pm.response.json();
    pm.expect(responseData).to.be.an('object');
    // Add more checks for data types and formats here
});
Test Results
Status	Description
✅ PASSED	Response content type is text/html.
❌ FAILED	Response schema validation for required fields (JSONError: Unexpected token '<' at 1:1 <!DOCTYPE html> ...)
❌ FAILED	Response schema validation for data types and formats (JSONError: Unexpected token '<' at 1:1 <!DOCTYPE html> ...)
Issue Identified
The response seems to be returning HTML instead of the expected JSON format.

This could indicate an issue with the API endpoint, such as:

Incorrect API URL.

Missing or incorrect Authorization token.



Server-side issue returning an error page instead of JSON.

Resolution Steps
Check the API URL: Ensure the endpoint is correct and accessible.

Verify Authorization: Confirm that the bearer token is valid and included in the request.

Inspect Response Body: If the response contains an HTML error page, check for issues on the server.

Use pm.response.text(): Instead of pm.response.json(), log pm.response.text() to debug unexpected HTML responses.

Test the API in a Browser: Open the URL directly in a browser to see if it returns an HTML page or a JSON response.
Postman Notes: POST Contacts API Testing in Linq
Endpoint
URL: https://linqapp.com/admin/22407/contacts
Method: POST

Headers
Content-Type: application/json

Authorization: Bearer <your_access_token>

Request Body (Example)
json
{
  "first_name": "John",
  "last_name": "Doe",
  "email": "johndoe@example.com",
  "phone": "+1234567890",
  "company": "Linq",
  "job_title": "QA Engineer",
  "notes": "Test contact creation"
}
Post-Response Tests in Postman
The following test scripts are executed after the response:

javascript

pm.test("Response status code is 404", function () {
    pm.expect(pm.response.code).to.equal(404);
});

pm.test("Response content type is text/html", function () {
    pm.expect(pm.response.headers.get("Content-Type")).to.include("text/html");
});

pm.test("Response time is less than 200ms", function () {
    pm.expect(pm.response.responseTime).to.be.below(200);
});
Test Results
Status	Description
✅ PASSED	Response status code is 404 Not Found.
✅ PASSED	Response content type is text/html.
✅ PASSED	Response time is less than 200ms.
❌ FAILED	Response schema does not match the expected format (JSONError: Unexpected token '<' at 1:1 <!DOCTYPE html> ...)
Issue Identified
The API returned a 404 Not Found error, which indicates:

The endpoint URL may be incorrect.

The resource does not exist.

The API may require authentication or different permissions.

The response is in text/html instead of JSON, suggesting that an error page is being returned instead of the expected API response.

Resolution Steps
Verify the Endpoint URL: Check if the URL is correct and exists in the API documentation.

Check Authorization: Ensure that the correct Bearer token is included in the request.

Inspect Response Body: Use pm.response.text() to log the full response and check for error messages.

Confirm API Permissions: Ensure the user making the request has the necessary permissions.

Test the API in a Browser: Open the URL in a browser to see if it returns an error page.